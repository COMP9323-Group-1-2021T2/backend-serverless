service: comp9323

variablesResolutionMode: 20210326

plugins:
  - serverless-plugin-typescript
  - serverless-prune-plugin

provider:
  name: aws
  runtime: nodejs12.x
  profile: comp9323
  memorySize: 128
  region: ap-southeast-2 # Sydney
  stage: ${opt:stage, 'staging'}
  lambdaHashingVersion: "20201221"
  timeout: 30
  vpc: ${self:custom.vpc}
  apiGateway:
    shouldStartNameWithService: true
  environment:
    DB_CONN_URL: ${self:custom.env.DB_CONN_URL}

functions:
  SecretAuthoriser:
    handler: src/authorisers/SecretAuthoriser.handler
    environment:
      SECRET: ${self:custom.env.SECRET}

  JwtAuthoriser:
    handler: src/authorisers/JwtAuthoriser.handler
    environment:
      SECRET: ${self:custom.env.SECRET}

  UpMigration:
    handler: src/migrations/UpMigration.handler

  SeedData:
    handler: src/migrations/SeedData.handler

  GetCategories:
    handler: src/http/GetCategories.handler
    events:
      - http:
          path: /categories
          method: get
          cors: true

  GetCategoryInfo:
    handler: src/http/GetCategoryInfo.handler
    events:
      - http:
          path: /{categoryId}
          method: get
          cors: true
          request:
            parameters:
              paths:
                categoryId: true

  GetCategoryArticles:
    handler: src/http/GetCategoryArticles.handler
    events:
      - http:
          path: /{categoryId}/articles
          method: get
          cors: true
          request:
            parameters:
              paths:
                categoryId: true

  GetCategoryVideos:
    handler: src/http/GetCategoryVideos.handler
    events:
      - http:
          path: /{categoryId}/videos
          method: get
          cors: true
          request:
            parameters:
              paths:
                categoryId: true

  CreateCategory:
    handler: src/http/CreateCategory.handler
    events:
      - http:
          path: /categories
          method: post
          cors: true
          authorizer:
            name: JwtAuthoriser

  CreateCategoryVideo:
    handler: src/http/CreateCategoryVideo.handler
    events:
      - http:
          path: /{categoryId}/videos
          method: post
          cors: true
          authorizer:
            name: JwtAuthoriser
          request:
            parameters:
              paths:
                categoryId: true

  CreateCategoryArticle:
    handler: src/http/CreateCategoryArticle.handler
    events:
      - http:
          path: /{categoryId}/articles
          method: post
          cors: true
          authorizer:
            name: JwtAuthoriser
          request:
            parameters:
              paths:
                categoryId: true

  DeleteCategoryVideo:
    handler: src/http/DeleteCategoryVideo.handler
    events:
      - http:
          path: /{categoryId}/videos/{videoId}
          method: delete
          cors: true
          authorizer:
            name: JwtAuthoriser
          request:
            parameters:
              paths:
                categoryId: true
                videoId: true

  DeleteCategory:
    handler: src/http/DeleteCategory.handler
    events:
      - http:
          path: /{categoryId}
          method: delete
          cors: true
          authorizer:
            name: JwtAuthoriser
          request:
            parameters:
              paths:
                categoryId: true

  Login:
    handler: src/http/Login.handler
    events:
      - http:
          path: /login
          method: post
          cors: true
    environment:
      SECRET: ${self:custom.env.SECRET}

custom:
  env:
    DB_CONN_URL: ${ssm:/comp9323/${self:provider.stage}/DB_CONN_URL}
    SECRET: ${ssm:/comp9323/${self:provider.stage}/SECRET}
  vpc:
    securityGroupIds: ${ssm:/comp9323/${self:provider.stage}/DEFAULT_SECURITY_GROUP}
    subnetIds: ${ssm:/comp9323/${self:provider.stage}/PRIVATE_SUBNET_IDS}

  prune:
    automatic: true
    number: 2
